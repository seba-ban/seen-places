// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: data_sources.sql

package queries

import (
	"context"
)

const createDataSource = `-- name: CreateDataSource :one
INSERT INTO data_sources (
  filepath, type, original_filename, size
) VALUES (
  $1, $2, $3, $4
)
RETURNING filepath, type, original_filename, size, created_at
`

type CreateDataSourceParams struct {
	Filepath         string
	Type             string
	OriginalFilename string
	Size             int64
}

func (q *Queries) CreateDataSource(ctx context.Context, arg CreateDataSourceParams) (DataSource, error) {
	row := q.db.QueryRow(ctx, createDataSource,
		arg.Filepath,
		arg.Type,
		arg.OriginalFilename,
		arg.Size,
	)
	var i DataSource
	err := row.Scan(
		&i.Filepath,
		&i.Type,
		&i.OriginalFilename,
		&i.Size,
		&i.CreatedAt,
	)
	return i, err
}

const getDataSourceByFilePath = `-- name: GetDataSourceByFilePath :one
SELECT filepath, type, original_filename, size, created_at FROM data_sources
WHERE filepath = $1
`

func (q *Queries) GetDataSourceByFilePath(ctx context.Context, filepath string) (DataSource, error) {
	row := q.db.QueryRow(ctx, getDataSourceByFilePath, filepath)
	var i DataSource
	err := row.Scan(
		&i.Filepath,
		&i.Type,
		&i.OriginalFilename,
		&i.Size,
		&i.CreatedAt,
	)
	return i, err
}
