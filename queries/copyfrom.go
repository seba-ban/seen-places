// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: copyfrom.go

package queries

import (
	"context"
)

// iteratorForCreatePoints implements pgx.CopyFromSource.
type iteratorForCreatePoints struct {
	rows                 []CreatePointsParams
	skippedFirstNextCall bool
}

func (r *iteratorForCreatePoints) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForCreatePoints) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].Geom,
		r.rows[0].Visited,
		r.rows[0].DataSourceFilepath,
	}, nil
}

func (r iteratorForCreatePoints) Err() error {
	return nil
}

func (q *Queries) CreatePoints(ctx context.Context, arg []CreatePointsParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"points"}, []string{"geom", "visited", "data_source_filepath"}, &iteratorForCreatePoints{rows: arg})
}
